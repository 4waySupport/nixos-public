#-MIBFILE: Synergy_100G_hpeStormControl.mib

SYNERGY100G-HPE-STORMCONTROL-MIB DEFINITIONS ::= BEGIN


DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

OwnerString ::=
	OCTET STRING (SIZE(0..255))

InterfaceIndex ::=
	INTEGER (1..2147483647)

InterfaceIndexOrZero ::=
	INTEGER (0..2147483647)

mib-2 OBJECT IDENTIFIER ::= { mgmt 1 }
interfaces OBJECT IDENTIFIER ::= { mib-2 2 }
ifTable OBJECT IDENTIFIER ::= { interfaces 2 }
ifEntry OBJECT IDENTIFIER ::= { ifTable 1 }
ifIndex OBJECT IDENTIFIER ::= { ifEntry 1 }
EnabledStatus ::=
	INTEGER {
	enabled(1),
	disabled(2)
	}

hp OBJECT IDENTIFIER ::= { enterprises 11 }
hpSysMgt OBJECT IDENTIFIER ::= { hp 5 }
hpEmbeddedServerMgt OBJECT IDENTIFIER ::= { hpSysMgt 7 }
hpModuleMgmtProc OBJECT IDENTIFIER ::= { hpEmbeddedServerMgt 5 }
hpVCSE-100Gb-F32-Module OBJECT IDENTIFIER ::= { hpModuleMgmtProc 9 }
syn100GhpeSynergyStormControlMIBObjects OBJECT IDENTIFIER ::= { hpVCSE-100Gb-F32-Module 1 }

syn100GhpeStormControl OBJECT IDENTIFIER ::= { syn100GhpeSynergyStormControlMIBObjects 4110 }

syn100GhpeStormControlGroup OBJECT IDENTIFIER ::= { syn100GhpeSynergyStormControlMIBObjects 1 }

syn100GhpeStormControlSystemStatus OBJECT-TYPE
	SYNTAX INTEGER {
	disable(0),
	enable(1)
	}
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION " This object is used to enable or disable the StormControl on system.
When user disables all storm control configurations will be deleted"
	::= { syn100GhpeStormControlGroup 1 }


syn100GhpeStormControlSystemRateLimitInPps OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Allows to configure the limiting value for the maximum number of broadcast,
multicast and destination lookup failure packets that can be received per second
over the interface. Setting this object to the value zero disables rate
limiting for broadcast,multicast and destination lookup failure packets on all the 
interfaces. The value that can be set for this object is limited by the underlying hardware"
	::= { syn100GhpeStormControlGroup 2 }


syn100GhpeStormControlSystemPollingInterval OBJECT-TYPE
	SYNTAX INTEGER (5..300)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object is used to configure the polling time interval in seconds and this timer interval
is used to read the multicast,broadcast and destination lookup failure drop packets due to
the rate limit"
	::= { syn100GhpeStormControlGroup 3 }


syn100GhpeStormControlStatsTable OBJECT-TYPE
	SYNTAX SEQUENCE OF Syn100GhpeStormControlStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A table to get the multicast,broadcast and destination lookup failure drop counters due to
the rate limit for each physical interface."
	::= { syn100GhpeStormControlGroup 4 }


syn100GhpeStormControlStatsEntry OBJECT-TYPE
	SYNTAX Syn100GhpeStormControlStatsEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "an entry appears in this table for each physical interface."
	INDEX { ifIndex  }

	::= { syn100GhpeStormControlStatsTable 1 }

syn100GhpeStormControlStatsEntry ::=
	SEQUENCE {
		syn100GhpeStormControlDLFDropCounters Counter32,
		syn100GhpeStormControlMCASTDropCounters Counter32,
		syn100GhpeStormControlBCASTDropCounters Counter32,
		syn100GhpeStormControlIfStatus INTEGER
		}

syn100GhpeStormControlDLFDropCounters OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry to get the received destination lookup failure packet drop counters due to
the rate limit for the physical interface."
	::= { syn100GhpeStormControlStatsEntry 1 }


syn100GhpeStormControlMCASTDropCounters OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry to get the received multicast packet drop counters due to
the rate limit for the physical interface."
	::= { syn100GhpeStormControlStatsEntry 2 }


syn100GhpeStormControlBCASTDropCounters OBJECT-TYPE
	SYNTAX Counter
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry to get the received broad cast packet drop counters due to
the rate limit for the physical interface."
	::= { syn100GhpeStormControlStatsEntry 3 }


syn100GhpeStormControlIfStatus OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "An entry to get the current drop status of dlf,bacst and mcast for the physical interface.
The represntation of reason is as follows
Bit 0 - dlf Drop Reason
Bit 1 - mcast Drop Reason
Bit 2 - bcast Drop Reason
ifExtReasonCode represents the reason code for each Interface for stormcontrol"
	::= { syn100GhpeStormControlStatsEntry 4 }


syn100GhpeStormControlTrap OBJECT IDENTIFIER ::= { syn100GhpeStormControl 2 }

syn100GhpestormControlTrap TRAP-TYPE
	ENTERPRISE syn100GhpeStormControlTrap
	VARIABLES { ifIndex, syn100GhpeStormControlIfStatus }
DESCRIPTION "This trap is generated when bcast,mcast and dlf drop counters are reached 
the configured rate limit within specified polling interval for each physical interface"
	::= 1


END

