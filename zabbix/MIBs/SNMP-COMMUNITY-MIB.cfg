#-MIBFILE: SNMP-COMMUNITY-MIB.mib

SNMP-COMMUNITY-MIB DEFINITIONS ::= BEGIN


snmpV2 OBJECT IDENTIFIER ::= { internet 6 }
snmpModules OBJECT IDENTIFIER ::= { snmpV2 3 }
snmpModules OBJECT IDENTIFIER ::= { snmpV2 3 }
DisplayString ::=
	OCTET STRING (SIZE(0..255))

PhysAddress ::=
	OCTET STRING

MacAddress ::=
	OCTET STRING (SIZE(6))

TruthValue ::=
	INTEGER {
	true(1),
	false(2)
	}

TestAndIncr ::=
	INTEGER (0..2147483647)

AutonomousType ::=
	OBJECT IDENTIFIER

InstancePointer ::=
	OBJECT IDENTIFIER

VariablePointer ::=
	OBJECT IDENTIFIER

RowPointer ::=
	OBJECT IDENTIFIER

RowStatus ::=
	INTEGER {
	active(1),
	notInService(2),
	notReady(3),
	createAndGo(4),
	createAndWait(5),
	destroy(6)
	}

TimeStamp ::=
	TimeTicks

TimeInterval ::=
	INTEGER (0..2147483647)

DateAndTime ::=
	OCTET STRING (SIZE(8|11))

StorageType ::=
	INTEGER {
	other(1),
	volatile(2),
	nonVolatile(3),
	permanent(4),
	readOnly(5)
	}

TDomain ::=
	OBJECT IDENTIFIER

TAddress ::=
	OCTET STRING (SIZE(1..255))

SnmpEngineID ::=
	OCTET STRING (SIZE(5..32))

SnmpSecurityModel ::=
	INTEGER (0..2147483647)

SnmpMessageProcessingModel ::=
	INTEGER (0..2147483647)

SnmpSecurityLevel ::=
	INTEGER {
	noAuthNoPriv(1),
	authNoPriv(2),
	authPriv(3)
	}

SnmpAdminString ::=
	OCTET STRING (SIZE(0..255))

SnmpTagValue ::=
	OCTET STRING (SIZE(0..255))

SnmpTagList ::=
	OCTET STRING (SIZE(0..255))

snmpTargetMIB OBJECT IDENTIFIER ::= { snmpModules 12 }
snmpTargetObjects OBJECT IDENTIFIER ::= { snmpTargetMIB 1 }
snmpTargetAddrTable OBJECT IDENTIFIER ::= { snmpTargetObjects 2 }
snmpTargetAddrEntry OBJECT IDENTIFIER ::= { snmpTargetAddrTable 1 }
snmpCommunityMIB OBJECT IDENTIFIER ::= { snmpModules 18 }

snmpCommunityMIBObjects OBJECT IDENTIFIER ::= { snmpCommunityMIB 1 }

snmpCommunityMIBConformance OBJECT IDENTIFIER ::= { snmpCommunityMIB 2 }

snmpCommunityTable OBJECT-TYPE
	SYNTAX SEQUENCE OF SnmpCommunityEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The table of community strings configured in the SNMP
engine's Local Configuration Datastore (LCD)."
	::= { snmpCommunityMIBObjects 1 }


snmpCommunityEntry OBJECT-TYPE
	SYNTAX SnmpCommunityEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a particular community string."
	INDEX { IMPLIED snmpCommunityIndex  }

	::= { snmpCommunityTable 1 }

snmpCommunityEntry ::=
	SEQUENCE {
		snmpCommunityIndex SnmpAdminString,
		snmpCommunityName OCTET STRING,
		snmpCommunitySecurityName SnmpAdminString,
		snmpCommunityContextEngineID SnmpEngineID,
		snmpCommunityContextName SnmpAdminString,
		snmpCommunityTransportTag SnmpTagValue,
		snmpCommunityStorageType StorageType,
		snmpCommunityStatus RowStatus
		}

snmpCommunityIndex OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The unique index value of a row in this table."
	::= { snmpCommunityEntry 1 }


snmpCommunityName OBJECT-TYPE
	SYNTAX OCTET STRING
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The community string for which a row in this table
represents a configuration.  There is no SIZE constraint
specified for this object because RFC 1157 does not
impose any explicit limitation on the length of community
strings (their size is constrained indirectly by the
SNMP message size)."
	::= { snmpCommunityEntry 2 }


snmpCommunitySecurityName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "A human readable string representing the corresponding
value of snmpCommunityName in a Security Model
independent format."
	::= { snmpCommunityEntry 3 }


snmpCommunityContextEngineID OBJECT-TYPE
	SYNTAX SnmpEngineID
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The contextEngineID indicating the location of the
context in which management information is accessed
when using the community string specified by the
corresponding instance of snmpCommunityName.

The default value is the snmpEngineID of the entity in
which this object is instantiated."
	::= { snmpCommunityEntry 4 }


snmpCommunityContextName OBJECT-TYPE
	SYNTAX SnmpAdminString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The context in which management information is accessed
when using the community string specified by the
corresponding instance of snmpCommunityName."
	::= { snmpCommunityEntry 5 }


snmpCommunityTransportTag OBJECT-TYPE
	SYNTAX SnmpTagValue
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "This object specifies a set of transport endpoints
which are used in two ways:
- to specify the transport endpoints from which an
SNMP entity will accept management requests, and
- to specify the transport endpoints to which a
notification may be sent using the community
string matching the corresponding instance of
snmpCommunityName.
In either case, if the value of this object has
zero-length, transport endpoints are not checked when
either authenticating messages containing this community
string, nor when generating notifications.

The transports identified by this object are specified
in the snmpTargetAddrTable.  Entries in that table
whose snmpTargetAddrTagList contains this tag value
are identified.

If a management request containing a community string
that matches the corresponding instance of
snmpCommunityName is received on a transport endpoint
other than the transport endpoints identified by this
object the request is deemed unauthentic.

When a notification is to be sent using an entry in
this table, if the destination transport endpoint of
the notification does not match one of the transport
endpoints selected by this object, the notification
is not sent."
	::= { snmpCommunityEntry 6 }


snmpCommunityStorageType OBJECT-TYPE
	SYNTAX StorageType
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The storage type for this conceptual row in the
snmpCommunityTable.  Conceptual rows having the value
'permanent' need not allow write-access to any
columnar object in the row."
	::= { snmpCommunityEntry 7 }


snmpCommunityStatus OBJECT-TYPE
	SYNTAX RowStatus
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The status of this conceptual row in the
snmpCommunityTable.

An entry in this table is not qualified for activation
until instances of all corresponding columns have been
initialized, either through default values, or through
Set operations.  The snmpCommunityName and
snmpCommunitySecurityName objects must be explicitly set.

There is no restriction on setting columns in this table
when the value of snmpCommunityStatus is active(1)."
	::= { snmpCommunityEntry 8 }


snmpTargetAddrExtTable OBJECT-TYPE
	SYNTAX SEQUENCE OF SnmpTargetAddrExtEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The table of mask and maximum message size (mms) values
associated with the snmpTargetAddrTable.

The snmpTargetAddrExtTable augments the
snmpTargetAddrTable with a transport address mask value
and a maximum message size value.  The transport address
mask allows entries in the snmpTargetAddrTable to define
a set of addresses instead of just a single address.
The maximum message size value allows the maximum
message size of another SNMP entity to be configured for
use in SNMPv1 (and SNMPv2c) transactions, where the
message format does not specify a maximum message size."
	::= { snmpCommunityMIBObjects 2 }


snmpTargetAddrExtEntry OBJECT-TYPE
	SYNTAX SnmpTargetAddrExtEntry
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "Information about a particular mask and mms value."
	::= { snmpTargetAddrExtTable 1 }

snmpTargetAddrExtEntry ::=
	SEQUENCE {
		snmpTargetAddrTMask OCTET STRING,
		snmpTargetAddrMMS Integer32
		}

snmpTargetAddrTMask OBJECT-TYPE
	SYNTAX OCTET STRING (SIZE(0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The mask value associated with an entry in the
snmpTargetAddrTable.  The value of this object must
have the same length as the corresponding instance of
snmpTargetAddrTAddress, or must have length 0.  An
attempt to set it to any other value will result in
an inconsistentValue error.

The value of this object allows an entry in the
snmpTargetAddrTable to specify multiple addresses.
The mask value is used to select which bits of
a transport address must match bits of the corresponding
instance of snmpTargetAddrTAddress, in order for the
transport address to match a particular entry in the
snmpTargetAddrTable.  Bits which are 1 in the mask
value indicate bits in the transport address which
must match bits in the snmpTargetAddrTAddress value.
Bits which are 0 in the mask indicate bits in the
transport address which need not match.  If the
length of the mask is 0, the mask should be treated
as if all its bits were 1 and its length were equal
to the length of the corresponding value of
snmpTargetAddrTable.

This object may not be modified while the value of the
corresponding instance of snmpTargetAddrRowStatus is
active(1).  An attempt to set this object in this case
will result in an inconsistentValue error."
	::= { snmpTargetAddrExtEntry 1 }


snmpTargetAddrMMS OBJECT-TYPE
	SYNTAX INTEGER (0|484..2147483647)
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The maximum message size value associated with an entry
in the snmpTargetAddrTable.  Note that a value of 0 means
that the maximum message size is unknown."
	::= { snmpTargetAddrExtEntry 2 }


snmpTrapAddress OBJECT-TYPE
	SYNTAX IpAddress
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value of the agent-addr field of a Trap PDU which
is forwarded by a proxy forwarder application using
an SNMP version other than SNMPv1.  The value of this
object SHOULD contain the value of the agent-addr field
from the original Trap PDU as generated by an SNMPv1
agent."
	::= { snmpCommunityMIBObjects 3 }


snmpTrapCommunity OBJECT-TYPE
	SYNTAX OCTET STRING
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION "The value of the community string field of an SNMPv1
message containing a Trap PDU which is forwarded by a
a proxy forwarder application using an SNMP version
other than SNMPv1.  The value of this object SHOULD
contain the value of the community string field from
the original SNMPv1 message containing a Trap PDU as
generated by an SNMPv1 agent.  There is no SIZE
constraint specified for this object because RFC 1157
does not impose any explicit limitation on the length
of community strings (their size is constrained
indirectly by the SNMP message size)."
	::= { snmpCommunityMIBObjects 4 }


snmpCommunityMIBCompliances OBJECT IDENTIFIER ::= { snmpCommunityMIBConformance 1 }

snmpCommunityMIBGroups OBJECT IDENTIFIER ::= { snmpCommunityMIBConformance 2 }

snmpCommunityTableGroup OBJECT IDENTIFIER ::= { snmpCommunityMIBGroups 1 }

snmpProxyTrapForwardGroup OBJECT IDENTIFIER ::= { snmpCommunityMIBGroups 3 }

END

